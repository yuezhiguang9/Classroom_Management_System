<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.campus_management_system.dao.dao_interface.TeachSecretaryMapper">

    <!-- 教秘查看审核工作台(分页) -->
    <select id="selectSecLogs" resultType="demo.campus_management_system.entity.VO.ListLogsVO">
        SELECT 
            u.user_name,
            u.user_phone as phone,
            ai.apply_book_time as book_time,
            b.building_name,
            c.room_num,
            cr.res_date as date,
            cr.res_week as week,
            cr.res_day_of_week as day_of_week,
            cr.res_period as period,
            ai.apply_purpose as purpose,
            ai.apply_person_count as person_count,
            ai.apply_status
        FROM apply_info ai
        LEFT JOIN users u ON ai.user_account = u.user_account
        LEFT JOIN classroom_resource cr ON ai.apply_id = cr.apply_info_id
        LEFT JOIN classroom c ON cr.room_num = c.room_num
        LEFT JOIN building b ON c.building_id = b.building_id
        WHERE ai.sec_account = #{secAccount}
            AND ai.user_cancel = 0
        <if test="applyStatus != null and applyStatus != ''">
            AND ai.apply_status = #{applyStatus}
        </if>
        <if test="buildingId != null and buildingId != ''">
            AND c.building_id = #{buildingId}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name LIKE CONCAT('%', #{userName}, '%')
        </if>
        <if test="dateStart != null and dateStart != ''">
            AND cr.res_date &gt;= #{dateStart}
        </if>
        <if test="dateEnd != null and dateEnd != ''">
            AND cr.res_date &lt;= #{dateEnd}
        </if>
        ORDER BY ai.apply_book_time DESC
    </select>

    <!-- 教秘今日待审核数 -->
    <select id="countTodayPendingBySec" resultType="Integer">
        SELECT COUNT(*)
        FROM apply_info
        WHERE sec_account = #{secAccount}
            AND apply_status = '未审核'
            AND DATE(apply_book_time) = CURDATE()
            AND user_cancel = 0
    </select>

    <!-- 教秘本周通过数 -->
    <select id="countWeekApprovedBySec" resultType="Integer">
        SELECT COUNT(*)
        FROM apply_info
        WHERE sec_account = #{secAccount}
            AND apply_status = '已通过'
            AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)
            AND user_cancel = 0
    </select>

    <!-- 教秘本周驳回数 -->
    <select id="countWeekRejectedBySec" resultType="Integer">
        SELECT COUNT(*)
        FROM apply_info
        WHERE sec_account = #{secAccount}
            AND apply_status = '已驳回'
            AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)
            AND user_cancel = 0
    </select>

    <!-- 根据申请ID查询详情(过滤用户取消的预约) -->
    <select id="selectSecLogDetail" resultType="demo.campus_management_system.entity.VO.ListLogsVO">
        SELECT 
            u.user_name,
            u.user_phone as phone,
            ai.apply_book_time as book_time,
            b.building_name,
            cr.room_num,
            cr.res_date as date,
            cr.res_week as week,
            cr.res_day_of_week as day_of_week,
            cr.res_period as period,
            ai.apply_purpose as purpose,
            ai.apply_person_count as person_count,
            ai.apply_status
        FROM apply_info ai
        LEFT JOIN users u ON ai.user_account = u.user_account
        LEFT JOIN classroom_resource cr ON ai.apply_id = cr.apply_info_id
        LEFT JOIN classroom c ON cr.room_num = c.room_num
        LEFT JOIN building b ON c.building_id = b.building_id
        WHERE ai.apply_id = #{applyId}
            AND ai.user_cancel = 0
        LIMIT 1
    </select>

    <!-- 更新申请审核状态 -->
    <update id="updateApplyStatus">
        UPDATE apply_info
        SET apply_status = #{applyStatus}
        <if test="rejectReason != null and rejectReason != ''">
            ,apply_reject_reason = #{rejectReason}
        </if>
        WHERE apply_id = #{applyId}
            AND user_cancel = 0
    </update>

    <!-- 查询教室使用率统计数据 -->
    <select id="selectUsageStatistics" resultType="demo.campus_management_system.entity.VO.ClassroomUsageVO">
        SELECT 
            CONCAT(ROUND(
                (SELECT COUNT(*) FROM classroom_resource cr1
                 LEFT JOIN classroom c1 ON cr1.room_num = c1.room_num
                 WHERE cr1.res_room_status = '已预订'
                 <if test="buildingId != null and buildingId != ''">
                     AND c1.building_id = #{buildingId}
                 </if>
                 <if test="roomType != null and roomType != ''">
                     AND c1.room_type = #{roomType}
                 </if>
                ) * 100.0 / 
                (SELECT COUNT(*) FROM classroom_resource cr2
                 LEFT JOIN classroom c2 ON cr2.room_num = c2.room_num
                 WHERE 1=1
                 <if test="buildingId != null and buildingId != ''">
                     AND c2.building_id = #{buildingId}
                 </if>
                 <if test="roomType != null and roomType != ''">
                     AND c2.room_type = #{roomType}
                 </if>
                ), 2), '%'
            ) as avg_usage_rate,
            
            (SELECT CONCAT(b.building_name, '-', cr.room_num)
             FROM classroom_resource cr
             LEFT JOIN classroom c ON cr.room_num = c.room_num
             LEFT JOIN building b ON c.building_id = b.building_id
             WHERE cr.res_room_status = '已预订'
             <if test="buildingId != null and buildingId != ''">
                 AND c.building_id = #{buildingId}
             </if>
             <if test="roomType != null and roomType != ''">
                 AND c.room_type = #{roomType}
             </if>
             GROUP BY cr.room_num
             ORDER BY COUNT(*) DESC
             LIMIT 1
            ) as most_used,
            
            (SELECT COUNT(*)
             FROM classroom_resource cr
             LEFT JOIN classroom c ON cr.room_num = c.room_num
             WHERE cr.res_room_status = '已预订'
             <if test="buildingId != null and buildingId != ''">
                 AND c.building_id = #{buildingId}
             </if>
             <if test="roomType != null and roomType != ''">
                 AND c.room_type = #{roomType}
             </if>
             GROUP BY cr.room_num
             ORDER BY COUNT(*) DESC
             LIMIT 1
            ) as most_usage_count,
            
            (SELECT CONCAT(b.building_name, '-', cr.room_num)
             FROM classroom_resource cr
             LEFT JOIN classroom c ON cr.room_num = c.room_num
             LEFT JOIN building b ON c.building_id = b.building_id
             WHERE cr.res_room_status = '已预订'
             <if test="buildingId != null and buildingId != ''">
                 AND c.building_id = #{buildingId}
             </if>
             <if test="roomType != null and roomType != ''">
                 AND c.room_type = #{roomType}
             </if>
             GROUP BY cr.room_num
             ORDER BY COUNT(*) ASC
             LIMIT 1
            ) as least_used,
            
            (SELECT COUNT(*)
             FROM classroom_resource cr
             LEFT JOIN classroom c ON cr.room_num = c.room_num
             WHERE cr.res_room_status = '已预订'
             <if test="buildingId != null and buildingId != ''">
                 AND c.building_id = #{buildingId}
             </if>
             <if test="roomType != null and roomType != ''">
                 AND c.room_type = #{roomType}
             </if>
             GROUP BY cr.room_num
             ORDER BY COUNT(*) ASC
             LIMIT 1
            ) as least_usage_count,
            
            (SELECT COUNT(*)
             FROM classroom_resource cr
             LEFT JOIN classroom c ON cr.room_num = c.room_num
             WHERE cr.res_room_status = '已预订'
             <if test="buildingId != null and buildingId != ''">
                 AND c.building_id = #{buildingId}
             </if>
             <if test="roomType != null and roomType != ''">
                 AND c.room_type = #{roomType}
             </if>
            ) as total_usage
    </select>

    <!-- 查询教室使用率详细列表(分页) -->
    <select id="selectUsageDetails" resultType="demo.campus_management_system.entity.VO.ClassroomUsageVO">
        SELECT 
            CONCAT(b.building_name, '-', c.room_num) as classroom,
            c.room_type,
            COUNT(cr.res_id) as usage_count,
            CONCAT(ROUND(COUNT(cr.res_id) * 100.0 / 
                (SELECT COUNT(*) FROM classroom_resource cr2 WHERE cr2.room_num = c.room_num), 2), '%'
            ) as usage_rate,
            '+5%' as change_rate
        FROM classroom c
        LEFT JOIN building b ON c.building_id = b.building_id
        LEFT JOIN classroom_resource cr ON c.room_num = cr.room_num 
            AND cr.res_room_status = '已预订'
        WHERE 1=1
        <if test="buildingId != null and buildingId != ''">
            AND c.building_id = #{buildingId}
        </if>
        <if test="roomType != null and roomType != ''">
            AND c.room_type = #{roomType}
        </if>
        <choose>
            <when test="timeRange == 'week'">
                AND (cr.res_id IS NULL OR YEARWEEK(cr.res_date, 1) = YEARWEEK(NOW(), 1))
            </when>
            <when test="timeRange == 'month'">
                AND (cr.res_id IS NULL OR (YEAR(cr.res_date) = YEAR(NOW()) AND MONTH(cr.res_date) = MONTH(NOW())))
            </when>
            <when test="timeRange == 'semester'">
                AND (cr.res_id IS NULL OR cr.res_date &gt;= DATE_SUB(NOW(), INTERVAL 6 MONTH))
            </when>
            <otherwise>
                <if test="dateStart != null and dateStart != ''">
                    AND (cr.res_id IS NULL OR cr.res_date &gt;= #{dateStart})
                </if>
                <if test="dateEnd != null and dateEnd != ''">
                    AND (cr.res_id IS NULL OR cr.res_date &lt;= #{dateEnd})
                </if>
            </otherwise>
        </choose>
        GROUP BY c.room_num, c.room_type, b.building_name
        ORDER BY usage_count DESC
    </select>


    <select id="getClassroomUsageStats" resultType="demo.campus_management_system.entity.VO.ClassroomUsageStatsVO">
        -- Classroom Usage Statistics Query
        SELECT
            -- 1. This week approved applications (本周批准的申请数量)
            (SELECT COUNT(*)
             FROM apply_info
             WHERE apply_status = '已通过'
               AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)
               AND user_cancel = 0)                                   AS this_week_approved,

            -- 2. This week rejected applications (本周拒绝的申请数量)
            (SELECT COUNT(*)
             FROM apply_info
             WHERE apply_status = '已驳回'
               AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) AS this_week_rejected,

            -- 3. Today pending review applications (今日待审核的申请数量)
            (SELECT COUNT(*)
             FROM apply_info
             WHERE apply_status = '未审核'
               AND DATE (apply_book_time) = CURDATE()) AS today_pending,

            -- 4. Approved applications comparison with yesterday (批准申请与昨日对比)
            CASE
            WHEN (
        SELECT COUNT (*)
        FROM apply_info
        WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = CURDATE()
          AND user_cancel = 0) =
            (
        SELECT COUNT (*)
        FROM apply_info
        WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = DATE_SUB(CURDATE()
            , INTERVAL 1 DAY)
          AND user_cancel = 0)
            THEN '与昨日持平'
            WHEN (
        SELECT COUNT (*)
        FROM apply_info
        WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = CURDATE()
          AND user_cancel = 0)
            >
            (
        SELECT COUNT (*)
        FROM apply_info
        WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = DATE_SUB(CURDATE()
            , INTERVAL 1 DAY)
          AND user_cancel = 0)
            THEN CONCAT('较昨日增长'
            , (SELECT COUNT (*) FROM apply_info WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = CURDATE()
          AND user_cancel = 0) -
            (SELECT COUNT (*) FROM apply_info WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = DATE_SUB(CURDATE()
            , INTERVAL 1 DAY)
          AND user_cancel = 0)
            , '个')
            ELSE CONCAT('较昨日减少'
            , (SELECT COUNT (*) FROM apply_info WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = DATE_SUB(CURDATE()
            , INTERVAL 1 DAY)
          AND user_cancel = 0) -
            (SELECT COUNT (*) FROM apply_info WHERE apply_status = '已通过'
          AND DATE (apply_book_time) = CURDATE()
          AND user_cancel = 0)
            , '个')
        END
        AS approved_vs_yesterday,

    -- 5. Rejected applications comparison with last week (拒绝申请与上周对比)
    CASE
        WHEN (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) =
             (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1)
        THEN '与上周持平'
        WHEN (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) >
             (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1)
        THEN CONCAT('较上周增长',
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) -
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1),
                   '个')
        ELSE CONCAT('较上周减少',
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1) -
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '已驳回' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)),
                   '个')
        END
        AS rejected_vs_last_week,

    -- 6. Pending applications comparison with last week (待审核申请与上周对比)
    CASE
        WHEN (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) =
             (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1)
        THEN '与上周持平'
        WHEN (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) >
             (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1)
        THEN CONCAT('较上周增长',
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)) -
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1),
                   '个')
        ELSE CONCAT('较上周减少',
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1) - 1) -
                   (SELECT COUNT(*) FROM apply_info WHERE apply_status = '未审核' AND YEARWEEK(apply_book_time, 1) = YEARWEEK(NOW(), 1)),
                   '个')
        END
        AS pending_vs_last_week;
    </select>

    <select id="calculateClassroomMetrics" resultType="demo.campus_management_system.entity.VO.CalculateClassroomMetricsVo">
        -- 教室使用率统计查询（全校统计）

        -- 1. 所有教室使用情况统计
        WITH classroom_usage AS (
        -- 计算每个教室的使用次数和总时段数
        SELECT
        c.room_num,
        c.room_type,
        c.room_capacity,
        COUNT(cr.res_id) as total_periods,
        SUM(CASE WHEN cr.res_room_status = '已预订' THEN 1 ELSE 0 END) as used_periods,
        CASE
        WHEN COUNT(cr.res_id) > 0 THEN
        ROUND(SUM(CASE WHEN cr.res_room_status = '已预订' THEN 1 ELSE 0 END) * 100.0 / COUNT(cr.res_id), 2)
        ELSE 0
        END as usage_rate
        FROM classroom c
        LEFT JOIN classroom_resource cr ON c.room_num = cr.room_num
        GROUP BY c.room_num, c.room_type, c.room_capacity
        ),

        -- 2. 本周使用情况统计
        this_week_usage AS (
        SELECT
        COUNT(CASE WHEN cr.res_room_status = '已预订' THEN 1 END) as this_week_used,
        COUNT(cr.res_id) as this_week_total
        FROM classroom_resource cr
        WHERE YEARWEEK(cr.res_date, 1) = YEARWEEK(CURDATE(), 1)
        ),

        -- 3. 上周使用情况统计
        last_week_usage AS (
        SELECT
        COUNT(CASE WHEN cr.res_room_status = '已预订' THEN 1 END) as last_week_used,
        COUNT(cr.res_id) as last_week_total
        FROM classroom_resource cr
        WHERE YEARWEEK(cr.res_date, 1) = YEARWEEK(CURDATE(), 1) - 1
        ),

        -- 4. 周使用率对比计算
        week_comparison AS (
        SELECT
        CASE
        WHEN tw.this_week_total > 0 THEN
        ROUND(tw.this_week_used * 100.0 / tw.this_week_total, 2)
        ELSE 0
        END as this_week_rate,
        CASE
        WHEN lw.last_week_total > 0 THEN
        ROUND(lw.last_week_used * 100.0 / lw.last_week_total, 2)
        ELSE 0
        END as last_week_rate
        FROM this_week_usage tw, last_week_usage lw
        ),

        -- 5. 计算平均使用率
        avg_usage AS (
        SELECT AVG(usage_rate) as average_usage_rate
        FROM classroom_usage
        ),

        -- 6. 找到使用最频繁的教室
        most_used AS (
        SELECT
        room_num,
        used_periods,
        usage_rate,
        ROW_NUMBER() OVER (ORDER BY used_periods DESC, usage_rate DESC) as rn
        FROM classroom_usage
        ),

        -- 7. 找到使用最少的教室
        least_used AS (
        SELECT
        room_num,
        used_periods,
        usage_rate,
        ROW_NUMBER() OVER (ORDER BY used_periods ASC, usage_rate ASC) as rn
        FROM classroom_usage
        )

        -- 主查询：返回6项统计结果
        SELECT
        ROUND(avg.average_usage_rate, 2) as average_usage_rate,
        (SELECT mu.room_num FROM most_used mu WHERE mu.rn = 1) as most_used_classroom,
        (SELECT mu.used_periods FROM most_used mu WHERE mu.rn = 1) as most_used_count,
        (SELECT lu.room_num FROM least_used lu WHERE lu.rn = 1) as least_used_classroom,
        (SELECT lu.used_periods FROM least_used lu WHERE lu.rn = 1) as least_used_count,
        CASE
        WHEN wc.this_week_rate > wc.last_week_rate THEN
        CONCAT('上升 ', ROUND(wc.this_week_rate - wc.last_week_rate, 2), '个百分点')
        WHEN wc.this_week_rate &lt; wc.last_week_rate THEN
                                 CONCAT('下降 ', ROUND(wc.last_week_rate - wc.this_week_rate, 2), '个百分点')
        ELSE '持平'
        END as weekly_comparison
        FROM avg_usage avg, week_comparison wc;
    </select>
</mapper>